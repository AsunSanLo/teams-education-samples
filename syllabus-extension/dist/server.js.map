{"version":3,"sources":["webpack:///webpack/bootstrap?7f80","webpack:///external \"debug\"?b2c7","webpack:///external \"botbuilder\"?fa14","webpack:///./src/app/syllabusBot/syllabusBot.ts?eebe","webpack:///./src/app/server.ts?53c8","webpack:///external \"express\"?22fe","[]","webpack:///external \"path\"?74bb","webpack:///external \"morgan\"?3206","webpack:///external \"express-msteams-host\"?e438","webpack:///external \"compression\"?f791","webpack:///external \"dotenv\"?e70f","webpack:///./src/app/TeamsAppsComponents.ts?b0db"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","debug","SyllabusBot","TeamsActivityHandler","super","context","query","url","console","log","adaptiveCardSource","CardFactory","adaptiveCard","response","composeExtension","type","attachmentLayout","attachments","heroCard","Promise","resolve","searchQuery","parameters","trim","toLowerCase","action","task","card","title","height","width","commandId","Error","config","express","Express","port","process","env","PORT","use","json","verify","req","res","buf","encoding","rawBody","toString","urlencoded","extended","set","path","join","__dirname","morgan","compression","static","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","http","createServer","listen","botAdapter","BotFrameworkAdapter","appId","MICROSOFT_APP_ID","appPassword","MICROSOFT_APP_PASSWORD","onTurnError","error","sendTraceActivity","sendActivity","bot","post","request","processActivity","run","nonce"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"debug\");","module.exports = require(\"botbuilder\");","import {\r\n    TeamsActivityHandler,\r\n    TurnContext,\r\n    MessageFactory,\r\n    MessagingExtensionAction,\r\n    MessagingExtensionActionResponse,\r\n    CardFactory,\r\n    MessagingExtensionQuery,\r\n    MessagingExtensionAttachment,\r\n    MessagingExtensionResponse,\r\n    AppBasedLinkQuery\r\n} from \"botbuilder\";\r\n\r\nimport * as Util from \"util\";\r\n\r\nimport * as debug from \"debug\";\r\nconst log = debug(\"msteams\");\r\n\r\nexport class SyllabusBot extends TeamsActivityHandler {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected handleTeamsAppBasedLinkQuery(context: TurnContext, query: AppBasedLinkQuery): Promise<MessagingExtensionResponse> {\r\n        const pastedUrl = query.url;\r\n        console.log(\"Pasted url!!\");\r\n        \r\n        const adaptiveCardSource: any = require(\"./syllabusDetailCard.json\");\r\n        const adaptiveCard = CardFactory.adaptiveCard(adaptiveCardSource);\r\n        console.log(\"ok adaptive Card!!\")\r\n        // return Promise.resolve(<MessagingExtensionActionResponse>{\r\n        //     composeExtension: {\r\n        //         type: \"result\",\r\n        //         attachmentLayout: \"list\",\r\n        //         attachments: [adaptiveCard]\r\n        //     }\r\n        // });\r\n        \r\n        let searchResultsCards: MessagingExtensionAttachment[] = [\r\n            CardFactory.heroCard(\"√Ålgebra lineal\", \"Resolver problemas de √Ålgebra Lineal, mediante habilidades de c√°lculo b√°sico y otras t√©cnicas. Comunicar, tanto por escrito como de forma oral, conocimientos, procedimientos, resultados e ideas matem√°ticas.\"),\r\n        ];\r\n\r\n        let response: MessagingExtensionResponse = <MessagingExtensionResponse>{\r\n            composeExtension: {\r\n                type: \"result\",\r\n                attachmentLayout: \"list\",\r\n                attachments: searchResultsCards\r\n            }\r\n        };\r\n\r\n        return Promise.resolve(response);\r\n    }\r\n\r\n    protected handleTeamsMessagingExtensionQuery(context: TurnContext, query: MessagingExtensionQuery): Promise<MessagingExtensionResponse> {\r\n        // get the search query\r\n        let searchQuery = \"\";\r\n        if (query && query.parameters && query.parameters[0].name === \"searchKeyword\" && query.parameters[0].value) {\r\n            searchQuery = query.parameters[0].value.trim().toLowerCase();\r\n        }\r\n\r\n        let searchResultsCards: MessagingExtensionAttachment[] = [\r\n            CardFactory.heroCard(\"√Ålgebra lineal\", \"Resolver problemas de √Ålgebra Lineal, mediante habilidades de c√°lculo b√°sico y otras t√©cnicas. Comunicar, tanto por escrito como de forma oral, conocimientos, procedimientos, resultados e ideas matem√°ticas.\"),\r\n            CardFactory.heroCard(\"√Ålgebra de Boole\", \"Resolver problemas de Boole y aprender a comunicar, tanto por escrito como de forma oral, conocimientos, procedimientos y resultados matem√°ticos\"),\r\n        ];\r\n\r\n        let response: MessagingExtensionResponse = <MessagingExtensionResponse>{\r\n            composeExtension: {\r\n                type: \"result\",\r\n                attachmentLayout: \"list\",\r\n                attachments: searchResultsCards\r\n            }\r\n        };\r\n\r\n        return Promise.resolve(response);\r\n    }\r\n\r\n    protected handleTeamsMessagingExtensionFetchTask(context: TurnContext, action: MessagingExtensionAction): Promise<MessagingExtensionActionResponse> {\r\n        const adaptiveCardSource: any = require(\"./syllabusSelectorCard.json\");\r\n        const adaptiveCard = CardFactory.adaptiveCard(adaptiveCardSource);\r\n        console.log(\"hello!\");\r\n        let response: MessagingExtensionActionResponse = <MessagingExtensionActionResponse>{\r\n            task: {\r\n                type: \"continue\",\r\n                value: {\r\n                    card: adaptiveCard,\r\n                    title: 'Comunicar temario',\r\n                    height: 150,\r\n                    width: 500\r\n                }\r\n            }\r\n        };\r\n        return Promise.resolve(response);\r\n    }\r\n\r\n    protected handleTeamsMessagingExtensionSubmitAction(context: TurnContext, action: MessagingExtensionAction): Promise<MessagingExtensionActionResponse> {\r\n        switch (action.commandId) {\r\n            case 'syllabusExpanderAction':\r\n                const adaptiveCardSource: any = require(\"./syllabusDetailCard.json\");\r\n                const adaptiveCard = CardFactory.adaptiveCard(adaptiveCardSource);\r\n                return Promise.resolve(<MessagingExtensionActionResponse>{\r\n                    composeExtension: {\r\n                        type: \"result\",\r\n                        attachmentLayout: \"list\",\r\n                        attachments: [adaptiveCard]\r\n                    }\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error('NotImplemented');\r\n        }\r\n    }\r\n}","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport * as compression from \"compression\";\nimport { BotFrameworkAdapter } from \"botbuilder\";\nimport { SyllabusBot } from \"./syllabusBot/syllabusBot\";\n\n\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\nlog(`Initializing Microsoft Teams Express hosted App...`);\n\n// Initialize dotenv, to use .env file settings if existing\n// tslint:disable-next-line:no-var-requires\nrequire(\"dotenv\").config();\n\n\n\n// The import of components has to be done AFTER the dotenv config\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\n// Inject the raw request body onto the request object\nexpress.use(Express.json({\n    verify: (req, res, buf: Buffer, encoding: string): void => {\n        (req as any).rawBody = buf.toString();\n    }\n}));\nexpress.use(Express.urlencoded({ extended: true }));\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Add compression - uncomment to remove compression\nexpress.use(compression());\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsPageRouter({\n    root: path.join(__dirname, \"web/\"),\n    components: allComponents\n}));\n\n// Set default web page\nexpress.use(\"/\", Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\"\n}));\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n    log(`Server running on ${port}`);\n});\n// register and load the bot\nconst botAdapter = new BotFrameworkAdapter({\n    appId: process.env.MICROSOFT_APP_ID,\n    appPassword: process.env.MICROSOFT_APP_PASSWORD\n});\n\n// configure what happens when there is an unhandled error by the bot\nbotAdapter.onTurnError = async (context, error) => {\n    console.error(`\\n [bot.onTurnError] unhandled error: ${error}`);\n    await context.sendTraceActivity(\"OnTurnError Trace\", `${error}`, \"https://www.botframework.com/schemas/error\", \"TurnError\");\n    await context.sendActivity(\"bot error\");\n};\n\n// run the bot when messages are received on the specified path\nconst bot = new SyllabusBot();\nexpress.post(\"/api/messages\", (request, response) => {\n    botAdapter.processActivity(request, response, async (context) => {\n        await bot.run(context);\n    });\n});\n","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"path\");","module.exports = require(\"morgan\");","module.exports = require(\"express-msteams-host\");","module.exports = require(\"compression\");","module.exports = require(\"dotenv\");","// Components will be added here\n\nexport const nonce = {}; // Do not remove!\nexport * from \"./syllabusBot/syllabusBot\";\n"],"sourceRoot":""}